service: import-service

frameworkVersion: '3'
	
useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  stage: dev
  environment:
    REGION: ${env:REGION}
    BUCKET: ${env:BUCKET}
    SQS_URL: ${env:SQS_URL}
    BASIC_AUTHORIZER_ARN: ${env:BASIC_AUTHORIZER_ARN}
  iamRoleStatements: 
    - Effect: Allow
      Action: s3:ListBucket
      Resource:
        - arn:aws:s3:::${env:BUCKET}
    - Effect: Allow
      Action: s3:*
      Resource:
        - arn:aws:s3:::${env:BUCKET}/*
    - Effect: Allow
      Action: sqs:*
      Resource:
        - arn:aws:sqs:${env:REGION}:${env:AMAZON_ID}:${env:CATALOG_ITEMS_QUEUE}

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: ["**/*.test.js", "*.d.js", "*.py"]

resources:
  Resources:
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET}
        AccessControl: PublicReadWrite
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
              - "*"
              AllowedMethods:
              - GET
              - POST
              - HEAD
              - PUT
              AllowedOrigins:
              - "*"
    GatewayResponseDefault4XX:
       Type: 'AWS::ApiGateway::GatewayResponse'
       Properties:
         ResponseParameters:
           gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
           gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
         ResponseType: DEFAULT_4XX
         RestApiId:
           Ref: 'ApiGatewayRestApi'          

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            arn: ${env:BASIC_AUTHORIZER_ARN}
            managedExternally: false
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${env:BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
